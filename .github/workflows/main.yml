name: EVSE

on:
  push:
    branches:
      - main
      - 'feat/**'
      - 'fix/**'
      - 'chore/**'
      - 'build/**'
  pull_request:
    branches:
      - main

jobs:

  quality:
    name: Quality
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v1
        - name: Load Env Var
          uses: ./.github/actions/load-var-file
          with:
            file_path: ./.github/variables/variables.shared.yml
        - name: Use Python ${{ env.Python_VERSION }}
          uses: actions/setup-python@v4
          with:
            python-version: ${{ env.PYTHON_VERSION }}
        - name: Prepare Environement
          run:
            pip install -U pip
            pip install poetry
            poetry config --local
            poetry --version
        - name: Install dependencies
          run: poetry install -vv
        - name: Check dependencies vulnerabilities
          run: make check-safety
        - name: Check linting with Flake8
          run: make check-flake8
        - name: Analyse Vulnerabilities with Bandit
          run: make check-bandit

  test:
      name: Test
      runs-on: ubuntu-latest
      steps:
          -   uses: actions/checkout@v1
          -   name: Load Env Var
              uses: ./.github/actions/load-var-file
              with:
                  file_path: ./.github/variables/variables.shared.yml
          -   name: Use Python ${{ env.Python_VERSION }}
              uses: actions/setup-python@v4
              with:
                  python-version: ${{ env.PYTHON_VERSION }}
          -   name: Prepare Environement
              run:
                  pip install -U pip
                  pip install poetry
                  poetry config --local
                  poetry --version
          -   name: Install dependencies
              run: poetry install -vv
          -   name: Build coverage file
              run: make text-unit-tests-cov
          -   name: Comment coverage
              uses: coroo/pytest-coverage-commentator@v1.0.2


  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [quality, test]
    if: ${{ github.actor != 'dependabot[bot]' && github.ref == 'refs/heads/main' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Load Env Var
        uses: ./.github/actions/load-var-file
        with:
          file_path: ./.github/variables/variables.shared.yml
      - name: Use Python ${{ env.Python_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install dependencies
        run: |
          pip install -U pip
          pip install poetry
          poetry config --local
          poetry --version
      - name: Python Semantic Release
        uses: relekang/python-semantic-release@master
        with:
          github_token: ${{ secrets.PAT_GITHUB }}
